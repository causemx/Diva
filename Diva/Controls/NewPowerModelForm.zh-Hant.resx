<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnDataAnalysisTab.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="BtnDataAnalysisTab.Location" type="System.Drawing.Point, System.Drawing">
    <value>85, 12</value>
  </data>
  <data name="BtnDataAnalysisTab.Size" type="System.Drawing.Size, System.Drawing">
    <value>72, 29</value>
  </data>
  <data name="BtnDataAnalysisTab.Text" xml:space="preserve">
    <value>資料分析</value>
  </data>
  <data name="BtnDataCollectionTab.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="BtnDataCollectionTab.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 12</value>
  </data>
  <data name="BtnDataCollectionTab.Size" type="System.Drawing.Size, System.Drawing">
    <value>72, 29</value>
  </data>
  <data name="BtnDataCollectionTab.Text" xml:space="preserve">
    <value>資料收集</value>
  </data>
  <data name="BtnActionCancel.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="BtnActionCancel.Location" type="System.Drawing.Point, System.Drawing">
    <value>393, 9</value>
  </data>
  <data name="BtnActionCancel.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 27</value>
  </data>
  <data name="BtnActionCancel.Text" xml:space="preserve">
    <value>以後再說</value>
  </data>
  <data name="BtnActionOk.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="BtnActionOk.Location" type="System.Drawing.Point, System.Drawing">
    <value>313, 9</value>
  </data>
  <data name="BtnActionOk.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 27</value>
  </data>
  <data name="BtnActionOk.Text" xml:space="preserve">
    <value>立刻進行</value>
  </data>
  <data name="LabelModelNameRules.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="LabelModelNameRules.Size" type="System.Drawing.Size, System.Drawing">
    <value>381, 34</value>
  </data>
  <data name="LabelModelNameRules.Text" xml:space="preserve">
    <value>※ 模型名稱最少需3個字元，以半形英數字開始並僅包含半形之英數、句點、底線及空白字元。</value>
  </data>
  <data name="TBoxModelName.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="TBoxModelName.Size" type="System.Drawing.Size, System.Drawing">
    <value>300, 24</value>
  </data>
  <data name="LabelModelName.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="LabelModelName.Size" type="System.Drawing.Size, System.Drawing">
    <value>73, 17</value>
  </data>
  <data name="LabelModelName.Text" xml:space="preserve">
    <value>模型名稱：</value>
  </data>
  <data name="BtnLogFileBrowse.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="BtnLogFileBrowse.Size" type="System.Drawing.Size, System.Drawing">
    <value>65, 27</value>
  </data>
  <data name="BtnLogFileBrowse.Text" xml:space="preserve">
    <value>瀏覽</value>
  </data>
  <data name="TBoxLogFileLocation.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="TBoxLogFileLocation.Size" type="System.Drawing.Size, System.Drawing">
    <value>240, 24</value>
  </data>
  <data name="LabelLogFileLocation.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="LabelLogFileLocation.Size" type="System.Drawing.Size, System.Drawing">
    <value>63, 17</value>
  </data>
  <data name="LabelLogFileLocation.Text" xml:space="preserve">
    <value>記錄檔： </value>
  </data>
  <data name="TBoxMissionAngle.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="TBoxMissionAngle.Location" type="System.Drawing.Point, System.Drawing">
    <value>140, 168</value>
  </data>
  <data name="TBoxMissionAngle.Size" type="System.Drawing.Size, System.Drawing">
    <value>60, 24</value>
  </data>
  <data name="LabelMissionAngle.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="LabelMissionAngle.Size" type="System.Drawing.Size, System.Drawing">
    <value>125, 17</value>
  </data>
  <data name="LabelMissionAngle.Text" xml:space="preserve">
    <value>旋轉能耗任務角度：</value>
  </data>
  <data name="TBoxDatCollectionSteps.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="TBoxDatCollectionSteps.Location" type="System.Drawing.Point, System.Drawing">
    <value>37, 63</value>
  </data>
  <data name="TBoxDatCollectionSteps.Size" type="System.Drawing.Size, System.Drawing">
    <value>429, 87</value>
  </data>
  <data name="TBoxDatCollectionSteps.Text" xml:space="preserve">
    <value>1. 確認飛行路徑上無任何障礙。
     如有需要，可修改原點位置及任務角度後再重新產生任務。
2. 連線至欲收集能耗資料之無人機。
3. 將產生的任務寫入無人機並執行任務。
4. 取出紀錄檔後進行資料分析。</value>
  </data>
  <data name="TBoxDataCollectionDescription.Font" type="System.Drawing.Font, System.Drawing">
    <value>Microsoft JhengHei UI, 9.75pt</value>
  </data>
  <data name="TBoxDataCollectionDescription.Size" type="System.Drawing.Size, System.Drawing">
    <value>456, 53</value>
  </data>
  <data name="TBoxDataCollectionDescription.Text" xml:space="preserve">
    <value>按下「立刻進行」鈕以產生收集飛行能耗用之任務。此任務路徑將相對於目前之原點位置。（此任務將會覆蓋目前的地圖上已編輯之任務。）
任務產生後，請依下列步收集能耗資料：</value>
  </data>
</root>